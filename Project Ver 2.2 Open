using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using MySql.Data.MySqlClient;

namespace Project01
{
    public partial class OpenSelectForm : Form
    {
        public OpenSelectForm()
        {
            InitializeComponent();
        }

        public string fileName;
        Focus_BT mainFrm = new Focus_BT();  //메인폼
        Bitmap bitmap;
        const int RGB = 3, RR = 0, GG = 1, BB = 2;  //RGB 갯수, RGB 순서0,1,2
        public byte[,,] o_inImg;
        public int o_inH, o_inW;

        //MySQL 불러오기 위한 문장
        String connStr = "Server=192.168.56.101;" +
            "Uid=winuser;" +
            "Pwd=4321;" +
            "Database=img_db;" +
            "Charset=UTF8";
        MySqlConnection conn; // 교량
        MySqlCommand cmd; // 트럭
        String sql = "";  // 물건박스
        MySqlDataReader reader; // 트럭이 가져올 끈

        

        private void OpenSelectForm_Load(object sender, EventArgs e)
        {
            conn = new MySqlConnection(connStr);
            conn.Open();
            cmd = new MySqlCommand("", conn);

            //리스트에 목록 채워 넣기
            sql = "SELECT i_id, i_fname, i_extname, i_width, i_height FROM imgFile_TBL"; // 짐 싸기
            cmd.CommandText = sql;  // 짐을 트럭에 싣기
            reader = cmd.ExecuteReader(); // 짐을 서버에 부어넣고, 끈으로 묶어서 끈만 가져옴.
            String i_fname, i_extname; // 톡!하고 땡겨올 짐을 담을 변수.
            int i_id, i_width, i_height;
            // 끈을 톡!하고 당기기
            string[] file_list = { };

            while (reader.Read())
            {
                i_id = (int)reader["i_id"];
                i_fname = (String)reader["i_fname"];
                i_extname = (string)reader["i_extname"];
                i_width = (int)reader["i_width"];
                i_height = (int)reader["i_height"];


                string str = i_id + "/" + i_fname + "." + i_extname;
                str += "/" + i_width + "x" + i_height;
                Array.Resize(ref file_list, file_list.Length + 1);  //배열 크기 1개 증가(배열타입 신경 x)
                file_list[file_list.Length - 1] = str;

            }

            reader.Close();
            comboBox1.Items.AddRange(file_list);    //리스트에 추가
        }

        private void OpenSelectForm_FormClosed(object sender, FormClosedEventArgs e)
        {
            conn.Close();
        }


        private void BTN_OpenFolder_Click(object sender, EventArgs e)
        {
            OpenFileDialog ofd = new OpenFileDialog();  // 객체 생성
            ofd.DefaultExt = "";
            ofd.Filter = "칼라필터 | *.png; *.jpg; *.bmp; *.if";    //호환파일?
            if (ofd.ShowDialog() != DialogResult.OK)
                return;
            fileName = ofd.FileName;

            //파일 -> 비트맵(bitmap)과정
            bitmap = new Bitmap(fileName);
            //BinaryReader br = new BinaryReader(File.Open(fileName, FileMode.Open));
            //파일이 어떤 형태인지 알 수 없으므로 바이너리를 사용 할수 없음

            // 중요! 입력이미지의 높이, 폭 알아내기
            //long fsize = new FileInfo(fileName).Length;
            //inH = inW = (int)Math.Sqrt(fsize);
            o_inW = bitmap.Height;    //비트맵은 상하 <-> 좌우의 관계가 반대
            o_inH = bitmap.Width;

            o_inImg = new byte[RGB, o_inH, o_inW]; // 메모리 할당, 3의 역할 : RGB 3개

            //bitmap --> 메모리 과정(로딩)
            for (int i = 0; i < o_inH; i++)
                for (int k = 0; k < o_inW; k++)
                {
                    Color c = bitmap.GetPixel(i, k);    //파일의 칼라값 가져오기
                    o_inImg[RR, i, k] = c.R;
                    o_inImg[GG, i, k] = c.G;
                    o_inImg[BB, i, k] = c.B;
                }

            this.DialogResult = DialogResult.OK;
        }

        private void BTN_OpenDB_Click(object sender, EventArgs e)
        {
            if(comboBox1.SelectedItem == null)
            {
                MessageBox.Show("파일이 없습니다.");
                return;
            }

            string selectStr = comboBox1.SelectedItem.ToString();
            int i_id = int.Parse(selectStr.Split('/')[0]);
            o_inW = int.Parse(selectStr.Split('/')[2].Split('x')[0]); // '/'로 자르고 2+1번째, 'x'로 자르고 0+1번째 값
            o_inH = int.Parse(selectStr.Split('/')[2].Split('x')[1]);

            sql = "SELECT p_row, p_col, p_Rvalue, p_Gvalue, p_Bvalue FROM imgPix_tbl WHERE i_id = " + i_id;



            cmd.CommandText = sql;  // 짐을 트럭에 싣기
            reader = cmd.ExecuteReader(); // 짐을 서버에 부어넣고, 끈으로 묶어서 끈만 가져옴.

            o_inImg = new byte[RGB, o_inH, o_inW]; // 메모리 할당, 3의 역할 : RGB 3개

            
            Color c;
            int r, g, b;
            int row, col;

            while (reader.Read())
            {
                row = int.Parse(reader["p_row"].ToString());
                col = int.Parse(reader["p_col"].ToString());
                r = int.Parse(reader["p_Rvalue"].ToString());
                g = int.Parse(reader["p_Gvalue"].ToString());
                b = int.Parse(reader["p_Bvalue"].ToString());
                c = Color.FromArgb(r, g, b);

                o_inImg[RR, row, col] = c.R;
                o_inImg[GG, row, col] = c.G;
                o_inImg[BB, row, col] = c.B;
            }


            reader.Close();


            this.DialogResult = DialogResult.OK;
        }
    }
}
